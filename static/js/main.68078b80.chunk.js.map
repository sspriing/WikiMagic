{"version":3,"sources":["lib/FirebaseData.tsx","components/Input.tsx","components/TodayData.tsx","components/RenderData.tsx","components/Category.tsx","page/SoldRecord.tsx","page/Purchase.tsx","page/WritePurchaseRecord.tsx","page/ShowPurchaseRecord.tsx","components/MonthData.tsx","page/Static.tsx","test/TestTodayData.tsx","test/test.tsx","App.tsx","serviceWorker.ts","index.tsx","test/wikimagic1.png"],"names":["getDate","today","Date","dd","String","padStart","mm","getMonth","getFullYear","date","slice","getDay","strDay","parseInt","dateToString","getTime","now","getHours","getMinutes","getSeconds","numberWithCommas","x","toString","replace","Input","cat","useState","age","setAge","price","setPrice","category","setCategory","cnt","setCnt","totalPrice","setTP","warnning","setWranning","setTS","data","time","a","undefined","isNaN","todaySold","document","querySelector","todaySoldInt","textContent","console","log","db","collection","doc","set","sold","then","window","location","reload","value","style","width","display","id","className","onChange","e","target","name","placeholder","type","onClick","TodayData","int","get","snapshot","forEach","itemList","ts","li","createElement","number","del","delBtn","refundBtn","confirm","delete","beforePrice","setTimeout","refundItem","askCount","prompt","alert","refundCnt","memo","setAttribute","addEventListener","appendChild","insertBefore","firstChild","exists","renderItem","RecordCategory","ct","Map","pr","num","has","sorted","entries","sort","b","categorySold","key","tr","rank","month","list","i","push","concat","RecordSold","marginTop","marginBottom","borderBottom","paddingBottom","fontSize","marginLeft","Purchase","to","WritePurchaseRecord","ShowPurchaseRecord","monthTotal","mt","Static","setDate","showSales","getElementById","innerHTML","monthCategorySold","renderMonthData","RecordMonthlyCategory","margin","marginRight","minWidth","height","TestTodayData","testRenderItem","TestInput","TestRecordSold","src","logo","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","path","component","excat","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.68078b80.chunk.js","sourcesContent":["import React from 'react'\r\nimport { db } from \"../App\";\r\n\r\nexport function getDate():string{\r\n    var today = new Date()\r\n    var strDay: string;\r\n    var dd = String(today.getDate()).padStart(2,'0')\r\n    var mm = String(today.getMonth()+1).padStart(2,'0')\r\n    var yyyy = today.getFullYear();\r\n    strDay = yyyy+ \"-\"+mm+\"-\"+dd\r\n    return(strDay) \r\n}\r\n\r\nexport function getMinusDate(day:number):string{\r\n    var today = new Date()\r\n    var strDay: string;\r\n    var dd = String(today.getDate()-day).padStart(2,'0')\r\n    var mm = String(today.getMonth()+1).padStart(2,'0')\r\n    var yyyy = today.getFullYear();\r\n    strDay = yyyy+ \"-\"+mm+\"-\"+dd\r\n    return(strDay) \r\n}\r\n\r\nexport function getMonth(date:string):string{\r\n    var strMonth:string;\r\n    strMonth = date.slice(0,7)\r\n    return strMonth;\r\n}\r\n\r\nexport function getDay(date:string):number{\r\n    var strDay:string;\r\n    strDay = date.slice(8,10)\r\n    return parseInt(strDay);\r\n}\r\n\r\nexport function dateToString(date:Date):string{\r\n    var strDay: string;\r\n    var dd = String(date.getDate()).padStart(2,'0')\r\n    var mm = String(date.getMonth()+1).padStart(2,'0')\r\n    var yyyy = date.getFullYear();\r\n    strDay = yyyy+ \"-\"+mm+\"-\"+dd\r\n    return(strDay) \r\n}\r\n\r\nexport function getTime():string{\r\n    var now = new Date()\r\n    var hh = String(now.getHours()).padStart(2,'0')\r\n    var mm = String(now.getMinutes()).padStart(2,'0')\r\n    var ss = String(now.getSeconds()).padStart(2,'0')\r\n    return(hh+\":\"+mm+\":\"+ss)\r\n}\r\n\r\nexport function delItem(){\r\n    \r\n}\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport function getMonthSales(month){\r\n\r\n}","import React, {Component, Fragment, useState} from 'react';\r\nimport {db} from '../App'\r\nimport InputNumber from 'react-input-just-numbers';\r\nimport{getTime, getDate, numberWithCommas} from '../lib/FirebaseData'\r\n\r\n//판매항목 입력부분\r\nfunction Input(){\r\n    const [age, setAge] = useState(\"성인\");\r\n    const [price, setPrice] = useState(0);\r\n    const [category, setCategory] = useState(\"양말\");\r\n    const [cnt, setCnt] = useState(1);\r\n    const [totalPrice, setTP] = useState(0);\r\n    const [warnning, setWranning] = useState(\"\");\r\n    const [ts, setTS] = useState(0)\r\n\r\n    let data = {\r\n        time: \"\",\r\n        age: age,\r\n        category: category,\r\n        price: price,\r\n        cnt: cnt,\r\n        totalPrice: totalPrice\r\n    }\r\n\r\n    var cat\r\n    if(age === \"성인\"){\r\n        cat = \r\n            <Fragment>\r\n                <option value = \"양말\">양말</option>\r\n                <option value = \"모자\">모자</option>\r\n                <option value = \"스카프 / 손수건\">머플러</option>\r\n                <option value = \"숄\">숄</option>\r\n                <option value = \"장갑\">장갑</option>\r\n                <option value = \"귀마개\">귀마개</option>\r\n                <option value = \"마스크 / 마스크줄\">마스크 / 마스크줄</option>\r\n                <option value = \"잠옷\">잠옷</option>\r\n                <option value = \"헤어핀\">헤어핀</option>\r\n                <option value = \"헤어밴드\">헤어밴드</option>\r\n                <option value = \"선글라스\">선글라스</option>\r\n                <option value = \"우양산\">우양산</option>\r\n                <option value = \"넥타이\">넥타이</option>\r\n                <option value = \"매출 누락\">매출 누락</option>\r\n            </Fragment>\r\n    }    \r\n    if(age === \"아동\"){\r\n        cat = \r\n        <Fragment>\r\n            <option value = \"헤어밴드\">헤어밴드</option>\r\n            <option value = \"반지\">반지</option>\r\n            <option value = \"가방\">가방</option>\r\n            <option value = \"모자\">모자</option>\r\n            <option value = \"양말\">양말</option>\r\n            <option value = \"헤어핀\">헤어핀</option>\r\n            <option value = \"선글라스\">선글라스</option>\r\n            <option value = \"기타\">기타</option>\r\n        </Fragment>\r\n    }\r\n\r\n    async function sendToFirebase(){\r\n        if(price === undefined || cnt === undefined || price ===0 || cnt ===0 || isNaN(price) || isNaN(cnt)){\r\n            setWranning(\"단가와 수량을 입력하세요\")\r\n            return;\r\n        }\r\n\r\n        var date = getDate()\r\n        var time = getTime()\r\n        data.time = time\r\n\r\n        var todaySold = document.querySelector(\"#today-sold\")\r\n        var todaySoldInt = todaySold?.textContent?.toString().replace(/[^0-9]/g,'');\r\n        if(todaySoldInt !== undefined && todaySoldInt !== null){\r\n            setTS(parseInt(todaySoldInt) + totalPrice)\r\n            console.log(parseInt(todaySoldInt) + totalPrice)\r\n            db.collection('wiki').doc('static').collection(date).doc(\"total sales\").set({sold: parseInt(todaySoldInt) + totalPrice})\r\n        }\r\n\r\n        else db.collection('wiki').doc('static').collection(date).doc(\"total sales\").set({sold: 0})\r\n\r\n        // firebase에 저장\r\n        db.collection('wiki')\r\n            .doc('sale')\r\n            .collection(date)\r\n            .doc(time)\r\n            .set({data}).then(doc=>{\r\n                                    console.log(\"setting\")\r\n                                    console.log(data)\r\n                                    window.location.reload(true)\r\n                                })\r\n        \r\n        \r\n\r\n        //저장이 되었는지 확인 후 reload\r\n        // db.collection('wiki')\r\n        //     .doc('sale')\r\n        //     .collection(date)\r\n        //     .doc(time)\r\n        //     .get()\r\n        //     .then(\r\n        //         doc =>{\r\n        //             // window.location.reload(true)\r\n        //             // // console.log(\"okdokey\")\r\n        //             // console.log(doc)\r\n        //         }\r\n        //     )\r\n    }\r\n\r\n    return(\r\n        <Fragment>\r\n                <div style = {{width: \"300px\", display: \"inline-block\"}}>\r\n\r\n                <select id = \"age\" className = \"select_age\" onChange =  {(e)=>{\r\n                    let {name, value} = e.target\r\n                    setAge(value)\r\n                    }}>\r\n                    <option value = \"성인\">성인</option>\r\n                    <option value = \"아동\">아동</option>\r\n                </select>\r\n                \r\n                <select id = \"category\" className = \"category\" onChange =  {(e)=>{\r\n                    let {name, value} = e.target\r\n                    setCategory(value)\r\n                    }}>\r\n                    {cat}\r\n                </select>\r\n\r\n                <InputNumber id = \"price\" placeholder = \"단가를 입력하세요\" onChange = {(e)=>{\r\n                    setPrice(parseInt(e.target.value))\r\n                    setTP(parseInt(e.target.value)*cnt)\r\n                    // console.log(price)\r\n                    // console.log(cnt)\r\n                    // console.log(totalPrice)\r\n                }}></InputNumber>\r\n                <InputNumber id = \"cnt\" placeholder = \"1 (기본값)\" onChange = {(e)=>{\r\n                    \r\n                    console.log(typeof(e.target.value))\r\n                    if(e.target.value=== undefined || isNaN(e.target.value) || e.target.value === \"\") {\r\n                        setCnt(1)\r\n                        setTP(price)\r\n                    }\r\n                    else{\r\n                        setCnt(parseInt(e.target.value))\r\n                        setTP(price*parseInt(e.target.value))\r\n                        console.log(price)\r\n                        console.log(cnt)\r\n                        console.log(totalPrice)\r\n                    }\r\n\r\n                }}></InputNumber>\r\n                <div id = \"totalPrice\" >총 금액: {numberWithCommas(totalPrice)}\r\n                <button id = \"submit\" type = \"submit\" onClick={sendToFirebase}>입력</button>\r\n                </div>\r\n                <div id = \"warnning\">{warnning}</div>\r\n                </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Input","import React, {Component, Fragment, useState} from 'react';\r\nimport {db} from '../App'\r\nimport {getDate} from '../lib/FirebaseData'\r\nimport { renderItem, testRenderItem} from './RenderData';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nfunction TodayData(date){\r\n    let int = 0\r\n    let data = db.collection('wiki').doc('sale').collection(date.date).get()\r\n     data.then((snapshot:any)=>{\r\n            snapshot.forEach((doc:any)=>{\r\n                int++\r\n                renderItem(doc,int,date.date)\r\n        })\r\n        }\r\n    )\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TodayData","import { db } from \"../App\";\r\nimport { getDate, numberWithCommas, getTime } from \"../lib/FirebaseData\";\r\n\r\nexport function testRenderItem(doc,int, date){\r\n    const itemList = document.querySelector(\"#item\")\r\n    var todaySold = document.querySelector(\"#today-sold\")\r\n\r\n    var ts = db.collection('wiki').doc('static').collection(date).doc('total sales')\r\n\r\n    let li = document.createElement('tr');\r\n    let number = document.createElement('td')\r\n    let time = document.createElement('td')\r\n    let name = document.createElement('td')\r\n    let cnt = document.createElement('td')\r\n    let price = document.createElement('td')\r\n    let totalPrice = document.createElement('td')\r\n    let del = document.createElement('td')\r\n    let delBtn = document.createElement('button')\r\n    let refundBtn = document.createElement('button')\r\n\r\n\r\n    li.setAttribute('data-id', doc.id)\r\n\r\n    number.className = \"item-number\"\r\n    time.className = \"item-time\"\r\n    name.className = \"item-name\"\r\n    cnt.className = \"item-cnt\"\r\n    price.className = \"item-price\"\r\n    totalPrice.className = \"item-totalPrice\"\r\n    del.className = \"item-del\"\r\n    delBtn.id = \"item-del\"\r\n    refundBtn.className = \"item-refund\"\r\n\r\n    delBtn.addEventListener(\"click\",delClick,false)\r\n    async function delClick(e){\r\n        var result = window.alert(\"권한이 없습니다\")\r\n    }\r\n\r\n    refundBtn.addEventListener(\"click\", refundClick, false)\r\n    async function refundClick(e){\r\n        var result = window.alert(\"권한이 없습니다.\")\r\n    }\r\n\r\n    async function refundItem(refundCnt:number){\r\n        window.alert(\"권한이 없습니다\")\r\n    }\r\n\r\n    number.textContent = int\r\n    time.textContent = doc.id.slice(0,5)\r\n    if(doc.data().data.memo)\r\n        name.textContent= doc.data().data.category + \"\\r\\n\" + doc.data().data.memo\r\n    else\r\n        name.textContent = doc.data().data.category\r\n    cnt.textContent = doc.data().data.cnt\r\n    price.textContent = numberWithCommas(doc.data().data.price)\r\n    totalPrice.textContent = numberWithCommas(doc.data().data.totalPrice)\r\n    delBtn.textContent=\"X\"\r\n    delBtn.value = doc.id\r\n    refundBtn.textContent = \"환불\"\r\n    refundBtn.value = doc.id\r\n\r\n    if(date === getDate())\r\n        del.appendChild(delBtn)\r\n    else \r\n        del.appendChild(refundBtn)\r\n\r\n    li.appendChild(number)\r\n    li.appendChild(time)\r\n    li.appendChild(name)\r\n    li.appendChild(cnt)\r\n    li.appendChild(price)\r\n    li.appendChild(totalPrice)\r\n    li.appendChild(del)\r\n\r\n    if(int === 0)\r\n    itemList?.appendChild(li)\r\nelse{\r\n    itemList?.insertBefore(li, itemList.firstChild)\r\n}\r\n\r\n\r\n   \r\n    ts.get().then((doc:any)=>{\r\n        if (doc.exists && todaySold&& !isNaN(doc.data().sold)){\r\n            todaySold.textContent= \"총 매출: \" + numberWithCommas(doc.data().sold)\r\n        }\r\n\r\n        else if(todaySold){\r\n            db.collection('wiki').doc('static').collection(date).doc(\"total sales\").set({sold: totalPrice.textContent})\r\n            todaySold.textContent= \"총 매출: \" + totalPrice.textContent\r\n        }\r\n    })\r\n}\r\n\r\nexport function renderItem(doc, int, date){\r\n    const itemList = document.querySelector(\"#item\")\r\n    var todaySold = document.querySelector(\"#today-sold\")\r\n\r\n    var ts = db.collection('wiki').doc('static').collection(date).doc('total sales')\r\n\r\n    let li = document.createElement('tr');\r\n    let number = document.createElement('td')\r\n    let time = document.createElement('td')\r\n    let name = document.createElement('td')\r\n    let cnt = document.createElement('td')\r\n    let price = document.createElement('td')\r\n    let totalPrice = document.createElement('td')\r\n    let del = document.createElement('td')\r\n    let delBtn = document.createElement('button')\r\n    let refundBtn = document.createElement('button')\r\n\r\n\r\n    li.setAttribute('data-id', doc.id)\r\n\r\n    number.className = \"item-number\"\r\n    time.className = \"item-time\"\r\n    name.className = \"item-name\"\r\n    cnt.className = \"item-cnt\"\r\n    price.className = \"item-price\"\r\n    totalPrice.className = \"item-totalPrice\"\r\n    del.className = \"item-del\"\r\n    delBtn.id = \"item-del\"\r\n    refundBtn.className = \"item-refund\"\r\n\r\n    delBtn.addEventListener(\"click\",delClick,false)\r\n    async function delClick(e){\r\n        var result = window.confirm(\"삭제하시겠습니까?\")\r\n        if(result){\r\n            db.collection('wiki').doc('sale').collection(date).doc(doc.id).delete()\r\n            var beforePrice = await ts.get().then((doc: any) => {\r\n                return doc.data().sold;\r\n            })\r\n            beforePrice -= doc.data().data.totalPrice\r\n            ts.set({sold: beforePrice})\r\n            setTimeout(()=>window.location.reload(),1000)\r\n        }\r\n    }\r\n\r\n    refundBtn.addEventListener(\"click\", refundClick, false)\r\n    async function refundClick(e){\r\n        var result = window.confirm(\"환불처리 하시겠습니까?\")\r\n        if(result){\r\n            if(doc.data().data.cnt === 1){\r\n                refundItem(1)\r\n            }\r\n            else{\r\n                var isAll = window.confirm(\"전체환불입니까?\")\r\n                if(isAll){\r\n                    refundItem(doc.data().data.cnt)\r\n                }\r\n                else{\r\n                    var askCount = window.prompt(\"몇 개 환불입니까?\")\r\n                    if(askCount!=null){\r\n                        askCount = askCount.replace(/[^0-9]/g,'')\r\n                        if(parseInt(askCount) >0 && parseInt(askCount) <= doc.data().data.cnt)\r\n                            refundItem(parseInt(askCount))\r\n                        else{\r\n                            window.alert(\"0 이상 \"+ doc.data().data.cnt+\" 이하 숫자로 입력하세요\")\r\n                        }\r\n                    }\r\n                    else{\r\n                        window.alert(\"숫자를 입력하세요\")\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else{}\r\n    }\r\n\r\n    async function refundItem(refundCnt:number){\r\n        var today = getDate()\r\n        var now = getTime()\r\n        let data = {\r\n            time: now,\r\n            age: doc.data().data.age,\r\n            category: \"환불\",\r\n            price: doc.data().data.price * -1,\r\n            cnt: refundCnt,\r\n            totalPrice: doc.data().data.price* -1 * refundCnt,\r\n            memo: date + \" \" +doc.data().data.time + \" \" + doc.data().data.category +\" \"+ refundCnt+ \"개\"\r\n        }\r\n        db.collection('wiki').doc('sale').collection(today).doc(now).set({data})\r\n        window.alert(\"처리 되었습니다\")\r\n    }\r\n\r\n    number.textContent = int\r\n    time.textContent = doc.id.slice(0,5)\r\n    if(doc.data().data.memo)\r\n        name.textContent= doc.data().data.category + \"\\r\\n\" + doc.data().data.memo\r\n    else\r\n        name.textContent = doc.data().data.category\r\n    cnt.textContent = doc.data().data.cnt\r\n    price.textContent = numberWithCommas(doc.data().data.price)\r\n    totalPrice.textContent = numberWithCommas(doc.data().data.totalPrice)\r\n    delBtn.textContent=\"X\"\r\n    delBtn.value = doc.id\r\n    refundBtn.textContent = \"환불\"\r\n    refundBtn.value = doc.id\r\n\r\n    if(date === getDate())\r\n        del.appendChild(delBtn)\r\n    else \r\n        del.appendChild(refundBtn)\r\n\r\n    li.appendChild(number)\r\n    li.appendChild(time)\r\n    li.appendChild(name)\r\n    li.appendChild(cnt)\r\n    li.appendChild(price)\r\n    li.appendChild(totalPrice)\r\n    li.appendChild(del)\r\n\r\n    if(int === 0)\r\n    itemList?.appendChild(li)\r\nelse{\r\n    itemList?.insertBefore(li, itemList.firstChild)\r\n}\r\n\r\n\r\n   \r\n    ts.get().then((doc:any)=>{\r\n        if (doc.exists && todaySold&& !isNaN(doc.data().sold)){\r\n            todaySold.textContent= \"총 매출: \" + numberWithCommas(doc.data().sold)\r\n        }\r\n\r\n        else if(todaySold){\r\n            db.collection('wiki').doc('static').collection(date).doc(\"total sales\").set({sold: totalPrice.textContent})\r\n            todaySold.textContent= \"총 매출: \" + totalPrice.textContent\r\n        }\r\n    })\r\n    \r\n\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport {db} from '../App'\r\nimport {dateToString, getDate, getDay, getMonth, numberWithCommas} from '../lib/FirebaseData'\r\nimport { renderItem} from './RenderData';\r\nimport firebase from 'firebase';\r\n\r\n//일별 카테고리 매출 조회 및 출력\r\nexport async function RecordCategory(date){\r\n    var ct = new Map()\r\n    var pr = new Map()\r\n    var total = 0;\r\n\r\n    let data = await db.collection('wiki').doc('sale').collection(date).get()\r\n    data.forEach((doc:any)=>{\r\n            var category = doc.data().data.category\r\n\r\n            var num = doc.data().data.cnt\r\n            var price = doc.data().data.totalPrice\r\n            total += price\r\n            if(ct.has(category)){\r\n                num = ct.get(category)+num\r\n                price = pr.get(category) + price\r\n                ct.set(category, num) \r\n                pr.set(category, price)\r\n            }\r\n            else{\r\n                ct.set(category,num)\r\n                pr.set(category, price)\r\n        }\r\n    })\r\n\r\n    var sorted = new Map([...pr.entries()].sort((a,b)=>b[1]-a[1]))\r\n\r\n    var categorySold = document.querySelector(\"#category-list\")\r\n\r\n    var int = 1\r\n\r\n    sorted.forEach((value, key)=>{\r\n        let tr = document.createElement('tr')\r\n        let rank = document.createElement('td')\r\n        let name = document.createElement('td')\r\n        let cnt = document.createElement('td')\r\n        let price = document.createElement('td')\r\n\r\n        rank.textContent = int.toString()\r\n        name.textContent = key\r\n        cnt.textContent = numberWithCommas(ct.get(key))\r\n        price.textContent = numberWithCommas(value)\r\n\r\n        tr.appendChild(rank)\r\n        tr.appendChild(name)\r\n        tr.appendChild(price)\r\n        tr.appendChild(cnt)\r\n\r\n        categorySold?.appendChild(tr)\r\n\r\n        int++\r\n    })\r\n\r\n}\r\n\r\nexport async function RecordMonthlyCategory(date){\r\n    var month = getMonth(date)\r\n    var today\r\n    if(month === getMonth(getDate()))\r\n        today = getDay(getDate())\r\n    else\r\n        today = 31\r\n\t\r\n    let list: string[]=[];\r\n\r\n    for(var i=0;i<today;i++){\r\n        // console.log(month.concat(\"-\").concat(String(i).padStart(2,'0')))\r\n        list.push(month.concat(\"-\").concat(String(i).padStart(2,'0')))\r\n    }\r\n\r\n    var ct = new Map()\r\n    var pr = new Map()\r\n    var total = 0;\r\n\r\n    for(var i=0;i<today;i++){\r\n        list.push(month.concat(\"-\").concat(String(i).padStart(2,'0')))\r\n    }\r\n\r\n    for(var i=0;i<today;i++){\r\n        let data = await db.collection('wiki').doc('sale').collection(list[i]).get()\r\n        data.forEach((doc:any)=>{\r\n                var category = doc.data().data.category\r\n\r\n                var num = doc.data().data.cnt\r\n                var price = doc.data().data.totalPrice\r\n                total += price\r\n                if(ct.has(category)){\r\n                    num = ct.get(category)+num\r\n                    price = pr.get(category) + price\r\n                    ct.set(category, num) \r\n                    pr.set(category, price)\r\n                }\r\n                else{\r\n                    ct.set(category,num)\r\n                    pr.set(category, price)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    var sorted = new Map([...pr.entries()].sort((a,b)=>b[1]-a[1]))\r\n\r\n    var categorySold = document.querySelector(\"#month-category-list\")\r\n\r\n    var int = 1\r\n\r\n    sorted.forEach((value, key)=>{\r\n        let tr = document.createElement('tr')\r\n        let rank = document.createElement('td')\r\n        let name = document.createElement('td')\r\n        let cnt = document.createElement('td')\r\n        let price = document.createElement('td')\r\n\r\n        rank.textContent = int.toString()\r\n        name.textContent = key\r\n        cnt.textContent = numberWithCommas(ct.get(key))\r\n        price.textContent = numberWithCommas(value)\r\n\r\n        tr.appendChild(rank)\r\n        tr.appendChild(name)\r\n        tr.appendChild(price)\r\n        tr.appendChild(cnt)\r\n\r\n        categorySold?.appendChild(tr)\r\n\r\n        int++\r\n    })\r\n}\r\n","import React, {Fragment} from 'react'\r\nimport Input from '../components/Input'\r\nimport TodayData from '../components/TodayData'\r\nimport {getDate} from '../lib/FirebaseData'\r\nimport logo from './wikimagic1.png'\r\nimport { RecordCategory } from '../components/Category'\r\n\r\n\r\n//http://localhost:3000/WikiMagic#/home\r\nfunction RecordSold(){\r\n  const today: string = getDate()\r\n  \r\n  RecordCategory(today)\r\n\r\n    return(\r\n        <Fragment>\r\n        {/* <img src = {logo} height = \"100px\"/> */}\r\n        <h2 style={{marginTop:\"2px\", marginBottom: \"5px\", borderBottom:\"5px double rgb(0, 68, 146)\", paddingBottom: \"5px\"}}>{getDate()}</h2>\r\n      <div className = \"input-data\">\r\n        <Input/>\r\n        <p style = {{fontSize:\"20px\", marginTop:\"15px\", marginBottom:\"2px\"}}>--종목별 매출--</p>\r\n        <div style = {{marginLeft: \"10px\"}}>\r\n          <table>\r\n          <thead>\r\n            <tr>\r\n              <th>순위</th><th>카테고리</th><th>판매금액</th><th>수량</th>\r\n            </tr>\r\n          </thead>\r\n          </table>\r\n        <div id = \"category-table-wrap\">\r\n          <table>\r\n          <tbody id = \"category-list\">\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div id = \"content\" >\r\n        <p id=\"today-sold\">총 매출: <TodayData date={today}/></p>\r\n        <table id = \"item-list\">\r\n        <colgroup>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"10%\"></col>\r\n            <col width = \"15%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th>번호</th><th>판매시간</th><th>상품명</th><th>수량</th><th>단가</th><th>총금액</th><th>삭제</th>\r\n            </tr>\r\n          </thead>\r\n          </table>\r\n        <div id = \"table-wrap\">\r\n        <table id = \"item-list\">\r\n          <colgroup>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"10%\"></col>\r\n            <col width = \"15%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n          </colgroup>\r\n            <tbody id = \"item\">\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default RecordSold","import React, { Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport WritePurchaseRecord from './WritePurchaseRecord'\r\nimport ShowPurchaseRecord from './ShowPurchaseRecord'\r\n\r\nfunction Purchase(){\r\n    return(\r\n        <Fragment>\r\n            <p>\r\n                <Link to = '/write-purchase-record'>구입내역 기록</Link>\r\n            </p>\r\n            <p>    \r\n                <Link to = '/show-purchase-record'>구입내역 조회</Link>\r\n            </p>\r\n        </Fragment>\r\n    )\r\n    \r\n}\r\n\r\nexport default Purchase","import React, { Fragment, useState } from 'react'\r\nimport Calendar from 'rc-calendar';\r\nimport InputNumber from 'react-input-just-numbers';\r\n\r\nfunction WritePurchaseRecord(){\r\n    return(\r\n        <Fragment>\r\n            <Calendar/>\r\n            <div className = \"input-data\">\r\n                <select>\r\n                    <option value = \"a\">카테고리</option>\r\n                </select>\r\n                <select>\r\n                    <option value = \"a\">업체</option>\r\n                </select>\r\n                <InputNumber id = \"price\" placeholder = \"단가를 입력하세요\" onChange = {(e)=>{\r\n\r\n                    }}></InputNumber>\r\n            </div>\r\n            \r\n\r\n            \r\n            <table id = \"item-list\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>품목</th><th>수량</th><th>단가</th><th>총금액</th><th>삭제</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = \"item\"></tbody>\r\n            </table>\r\n\r\n            <p>\r\n                <button > 확인</button>\r\n            </p>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default WritePurchaseRecord","import React, { Fragment } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction ShowPurchaseRecord(){\r\n    return(\r\n        <Fragment>\r\n            dkdkdkdk\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ShowPurchaseRecord","import React from 'react'\r\nimport {db} from '../App'\r\nimport { getDate, getDay, getMinusDate, numberWithCommas, getMonth } from '../lib/FirebaseData';\r\n\r\n//한달 총 매출 계산 및 화면에 출력\r\nexport async function renderMonthData(month:string){\r\n    var monthTotal =0;\r\n    var doc =  db.collection('wiki').doc('static')\r\n    var today;\r\n\r\n    //선택된 날짜가 오늘과 같다면 today = 오늘 날짜, 아니라면(오늘 이전날짜 선택) today = 31\r\n    //list 의 길이가 쓸모없이 길어지는걸 방지하기 위해\r\n    if(month === getMonth(getDate()))\r\n        today = getDay(getDate())\r\n    else\r\n        today = 31\r\n\t\r\n    let list: string[]=[];\r\n\r\n    for(var i=0;i<today;i++){\r\n        // console.log(month.concat(\"-\").concat(String(i).padStart(2,'0')))\r\n        list.push(month.concat(\"-\").concat(String(i).padStart(2,'0')))\r\n    }\r\n    \r\n    for(var i=0;i<today;i++){\r\n        await doc.collection(list[i]).doc(\"total sales\").get().then((doc:any)=>{\r\n            if(doc.data()!=undefined){\r\n                console.log(doc.data().sold)\r\n                monthTotal += doc.data().sold\r\n                return doc.data().sold\r\n            }\r\n        })\r\n    }\r\n\r\n    const mt = document.querySelector(\"#month-total\")\r\n    if(mt)\r\n        mt.textContent =  \"이번달 총 매출: \"+numberWithCommas(monthTotal)\r\n}","import React, { Fragment } from 'react'\r\n// import Calendar from 'rc-calendar'\r\nimport Calendar from 'react-calendar'\r\nimport { useState } from 'react'\r\nimport TodayData from '../components/TodayData';\r\nimport { getDate, dateToString, getMonth } from '../lib/FirebaseData';\r\nimport Monthly from '../components/Monthly';\r\nimport { RecordCategory, RecordMonthlyCategory } from '../components/Category';\r\nimport { renderMonthData } from '../components/MonthData';\r\nimport Input from '../components/Input';\r\n\r\n\r\n//http://localhost:3000/WikiMagic#/static\r\nfunction Static(){\r\n    var today = new Date();\r\n    const [date, setDate] = useState(today);\r\n    // RecordCategory(dateToString(date))\r\n\r\n    //달력 날짜 클릭시 발생하는 이벤트\r\n    //데이터 호출 컴포넌트에 날짜정보 넘겨주고 테이블내용 리셋시킨다\r\n    function showSales(date:Date){\r\n        const itemList = document.getElementById(\"item\"); \r\n        if(itemList){\r\n            itemList.innerHTML = \"\";\r\n        }\r\n        setDate(date) \r\n        console.log(date)\r\n\r\n        var categorySold = document.querySelector(\"#category-list\")\r\n        if(categorySold){\r\n            categorySold.innerHTML=\"\"\r\n        }\r\n        var monthCategorySold = document.querySelector(\"#month-category-list\")\r\n        if(monthCategorySold){\r\n          monthCategorySold.innerHTML=\"\"\r\n        }\r\n        renderMonthData(getMonth(dateToString(date)))\r\n\r\n        RecordCategory(dateToString(date))\r\n        RecordMonthlyCategory(dateToString(date))\r\n\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <div>\r\n        <Calendar \r\n            onChange ={(date:any)=> showSales(date)} \r\n            value = {date}\r\n            style={{\r\n                display:\"inline-block\", \r\n                margin:\"10px\",\r\n            }}\r\n        />\r\n        {/* <Monthly/> */}\r\n        <div>\r\n            <p id = \"month-total\"></p>\r\n        </div>\r\n        </div>\r\n        <div className = \"input-data\" style = {{marginRight:\"2vw\", display:\"table\",width:\"47vw\", minWidth:\"310px\", }}>\r\n        <p style = {{fontSize:\"20px\", marginTop:\"15px\", marginBottom:\"2px\"}}>--일별 종목별 매출--</p>\r\n        <div style = {{marginLeft: \"10px\"}}>\r\n          <table>\r\n          <thead>\r\n            <tr>\r\n              <th>순위</th><th>카테고리</th><th>판매금액</th><th>수량</th>\r\n            </tr>\r\n          </thead>\r\n          </table>\r\n        <div id = \"category-table-wrap\">\r\n          <table>\r\n          <tbody id = \"category-list\">\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className = \"input-data\" style = {{display:\"table\",width:\"47vw\", minWidth:\"310px\", }}>\r\n        <p style = {{fontSize:\"20px\", marginTop:\"15px\", marginBottom:\"2px\"}}>--월별 종목별 매출--</p>\r\n        <div style = {{marginLeft: \"10px\"}}>\r\n          <table>\r\n          <thead>\r\n            <tr>\r\n              <th>순위</th><th>카테고리</th><th>판매금액</th><th>수량</th>\r\n            </tr>\r\n          </thead>\r\n          </table>\r\n        <div id = \"category-table-wrap\">\r\n          <table>\r\n          <tbody id = \"month-category-list\">\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n       <div style = {{height:\"40px\", width:\"100%\", display:\"inline-block\"}}>       \r\n          <p id=\"today-sold\" style = {{marginRight:\"40px\"}}>매출: <TodayData date={dateToString(date)}/></p>\r\n      </div>\r\n        <table id = \"item-list\" style = {{width:\"95vw\", marginLeft:\"10px\"}} >\r\n          <thead>\r\n            <tr>\r\n              <th>번호</th><th>판매시간</th><th>상품명</th><th>수량</th><th>단가</th><th>총금액</th><th>삭제</th>\r\n            </tr>\r\n          </thead>\r\n            <tbody id = \"item\"></tbody>\r\n        </table>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default Static","import React, {Component, Fragment, useState} from 'react';\r\nimport {db} from '../App'\r\nimport {getDate} from '../lib/FirebaseData'\r\nimport {testRenderItem} from '../components/RenderData';\r\n\r\nfunction TestTodayData(date){\r\n    let int = 0\r\n    let data = db.collection('wiki').doc('sale').collection(date.date).get()\r\n     data.then((snapshot:any)=>{\r\n            snapshot.forEach((doc:any)=>{\r\n                int++\r\n                testRenderItem(doc,int,date.date)\r\n        })\r\n        }\r\n    )\r\n\r\n    \r\n    return (\r\n        <Fragment>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TestTodayData","import React, {Fragment, useState} from 'react'\r\nimport TestTodayData from './TestTodayData'\r\nimport logo from './wikimagic1.png'\r\nimport { RecordCategory } from '../components/Category'\r\nimport InputNumber from 'react-input-just-numbers';\r\nimport{getTime, getDate, numberWithCommas} from '../lib/FirebaseData'\r\n\r\nfunction TestInput(){\r\n  const [age, setAge] = useState(\"성인\");\r\n  const [price, setPrice] = useState(0);\r\n  const [category, setCategory] = useState(\"마스크 / 마스크줄\");\r\n  const [cnt, setCnt] = useState(1);\r\n  const [totalPrice, setTP] = useState(0);\r\n  const [warnning, setWranning] = useState(\"\");\r\n  const [ts, setTS] = useState(0)\r\n\r\n  let data = {\r\n      time: \"\",\r\n      age: age,\r\n      category: category,\r\n      price: price,\r\n      cnt: cnt,\r\n      totalPrice: totalPrice\r\n  }\r\n\r\n  var cat\r\n  if(age === \"성인\"){\r\n      cat = \r\n          <Fragment>\r\n              <option value = \"마스크 / 마스크줄\">마스크 / 마스크줄</option>\r\n              <option value = \"모자\">모자</option>\r\n              <option value = \"양말\">양말</option>\r\n              <option value = \"잠옷\">잠옷</option>\r\n              <option value = \"헤어핀\">헤어핀</option>\r\n              <option value = \"헤어밴드\">헤어밴드</option>\r\n              <option value = \"스카프 / 손수건\">스카프 / 손수건</option>\r\n              <option value = \"선글라스\">선글라스</option>\r\n              <option value = \"우양산\">우양산</option>\r\n              <option value = \"넥타이\">넥타이</option>\r\n              <option value = \"매출 누락\">매출 누락</option>\r\n          </Fragment>\r\n  }    \r\n  if(age === \"아동\"){\r\n      cat = \r\n      <Fragment>\r\n          <option value = \"헤어밴드\">헤어밴드</option>\r\n          <option value = \"반지\">반지</option>\r\n          <option value = \"가방\">가방</option>\r\n          <option value = \"모자\">모자</option>\r\n          <option value = \"양말\">양말</option>\r\n          <option value = \"헤어핀\">헤어핀</option>\r\n          <option value = \"선글라스\">선글라스</option>\r\n          <option value = \"기타\">기타</option>\r\n      </Fragment>\r\n  }\r\n\r\n  async function sendToFirebase(){\r\n      if(price === undefined || cnt === undefined || price ===0 || cnt ===0 || isNaN(price) || isNaN(cnt)){\r\n          setWranning(\"단가와 수량을 입력하세요\")\r\n          return;\r\n      }\r\n      setWranning(\"현재 페이지는 시범용 페이지로 데이터는 입력되지 않습니다.\")\r\n  }\r\n\r\n  return(\r\n      <Fragment>\r\n              <div style = {{width: \"300px\", display: \"inline-block\"}}>\r\n\r\n              <select id = \"age\" className = \"select_age\" onChange =  {(e)=>{\r\n                  let {name, value} = e.target\r\n                  setAge(value)\r\n                  }}>\r\n                  <option value = \"성인\">성인</option>\r\n                  <option value = \"아동\">아동</option>\r\n              </select>\r\n              \r\n              <select id = \"category\" className = \"category\" onChange =  {(e)=>{\r\n                  let {name, value} = e.target\r\n                  setCategory(value)\r\n                  }}>\r\n                  {cat}\r\n              </select>\r\n\r\n              <InputNumber id = \"price\" placeholder = \"단가를 입력하세요\" onChange = {(e)=>{\r\n                  setPrice(parseInt(e.target.value))\r\n                  setTP(parseInt(e.target.value)*cnt)\r\n                  console.log(price)\r\n                  console.log(cnt)\r\n                  console.log(totalPrice)\r\n              }}></InputNumber>\r\n              <InputNumber id = \"cnt\" placeholder = \"1 (기본값)\" onChange = {(e)=>{\r\n                  \r\n                  console.log(typeof(e.target.value))\r\n                  if(e.target.value=== undefined || isNaN(e.target.value) || e.target.value === \"\") {\r\n                      setCnt(1)\r\n                      setTP(price)\r\n                  }\r\n                  else{\r\n                      setCnt(parseInt(e.target.value))\r\n                      setTP(price*parseInt(e.target.value))\r\n                      console.log(price)\r\n                      console.log(cnt)\r\n                      console.log(totalPrice)\r\n                  }\r\n\r\n              }}></InputNumber>\r\n              <div id = \"totalPrice\" >총 금액: {numberWithCommas(totalPrice)}\r\n              <button id = \"submit\" type = \"submit\" onClick={sendToFirebase}>입력</button>\r\n              </div>\r\n              <div id = \"warnning\">{warnning}</div>\r\n              </div>\r\n      </Fragment>\r\n  )\r\n}\r\n\r\n\r\nfunction TestRecordSold(){\r\n  const today: string = getDate()\r\n  \r\n  RecordCategory(today)\r\n\r\n    return(\r\n        <Fragment>\r\n        <img src = {logo} height = \"100px\"/>\r\n        <h2 style={{marginTop:\"2px\", marginBottom: \"5px\", borderBottom:\"5px double rgb(0, 68, 146)\", paddingBottom: \"5px\"}}>{getDate()}</h2>\r\n      <div className = \"input-data\">\r\n        <TestInput/>\r\n        <p style = {{fontSize:\"20px\", marginTop:\"15px\", marginBottom:\"2px\"}}>--종목별 매출--</p>\r\n        <div style = {{marginLeft: \"10px\"}}>\r\n          <table>\r\n          <thead>\r\n            <tr>\r\n              <th>순위</th><th>카테고리</th><th>판매금액</th><th>수량</th>\r\n            </tr>\r\n          </thead>\r\n          </table>\r\n        <div id = \"category-table-wrap\">\r\n          <table>\r\n          <tbody id = \"category-list\">\r\n          </tbody>\r\n          </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div id = \"content\" >\r\n        <p id=\"today-sold\">총 매출: <TestTodayData date={today}/></p>\r\n        <table id = \"item-list\">\r\n        <colgroup>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"10%\"></col>\r\n            <col width = \"15%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n          </colgroup>\r\n          <thead>\r\n            <tr>\r\n              <th>번호</th><th>판매시간</th><th>상품명</th><th>수량</th><th>단가</th><th>총금액</th><th>삭제</th>\r\n            </tr>\r\n          </thead>\r\n          </table>\r\n        <div id = \"table-wrap\">\r\n        <table id = \"item-list\">\r\n          <colgroup>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"10%\"></col>\r\n            <col width = \"15%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n            <col width = \"5%\"></col>\r\n          </colgroup>\r\n            <tbody id = \"item\">\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n      </div>\r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default TestRecordSold","import React, {Fragment} from 'react';\r\nimport './App.css';\r\nimport firebase from 'firebase'\r\nimport {Route, HashRouter,BrowserRouter, Switch} from 'react-router-dom'\r\nimport RecordSold from './page/SoldRecord';\r\nimport Purchase from './page/Purchase';\r\nimport WritePurchaseRecord from './page/WritePurchaseRecord';\r\nimport ShowPurchaseRecord from './page/ShowPurchaseRecord'\r\nimport Static from './page/Static';\r\nimport TestRecordSold from './test/test'\r\nimport 'react-calendar/dist/Calendar.css'\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAuMUMqkpuvevgi9pu_NM6ZqUBniwvhuQs\",\r\n  authDomain: \"wikimagic-4ce55.firebaseapp.com\",\r\n  databaseURL: \"https://wikimagic-4ce55.firebaseio.com\",\r\n  projectId: \"wikimagic-4ce55\",\r\n  storageBucket: \"wikimagic-4ce55.appspot.com\",\r\n  messagingSenderId: \"999608533978\",\r\n  appId: \"1:999608533978:web:1328133731ac663f2836e3\",\r\n  measurementId: \"G-K3WGGRGWHB\"\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const db = firebase.firestore();\r\n\r\nconst App=()=> {\r\n  return (\r\n    <Fragment>\r\n      <div className = \"App\">\r\n        <HashRouter>\r\n            <Route path = \"/purchase\" component = {Purchase}/>\r\n            <Route path = \"/static\" component = {Static}/>\r\n            <Route path=\"/test\" component = {TestRecordSold}/>\r\n            <Route path = \"/write-purchase-record\" component = {WritePurchaseRecord}/>\r\n            <Route path = \"/show-purchase-record\" component = {ShowPurchaseRecord}/>\r\n            <Route excat path = \"/home\" component = {RecordSold}/>\r\n        </HashRouter>\r\n      </div>\r\n        \r\n    </Fragment>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/wikimagic1.f04f82f5.png\";"],"sourceRoot":""}